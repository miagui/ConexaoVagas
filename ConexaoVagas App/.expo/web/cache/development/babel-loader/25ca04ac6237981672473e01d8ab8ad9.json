{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Documentos\\\\Projetos\\\\Programacao\\\\React Native\\\\ConexaoVagas-App\\\\screens\\\\master.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createDrawerNavigator, DrawerItemList } from '@react-navigation/drawer';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport tailwind from 'tailwind-rn';\nimport { Jwt } from \"../services/auth\";\nimport { Color } from \"../styles/global\";\nimport { TipoUsuario } from \"../utils/enums\";\nimport { CHome } from \"./c-home\";\nimport EHome from \"./e-home\";\nimport EVagaCandidaturas from \"./e-vaga-candidaturas\";\nimport { TouchableNativeFeedback } from 'react-native-gesture-handler';\nimport { TOKEN_KEY } from \"../api/apisettings\";\nimport { useNavigation } from '@react-navigation/native';\nvar Drawer = createDrawerNavigator();\nvar Stack = createStackNavigator();\nexport default function Master() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var hiddenScreens = [\"Candidaturas\"];\n  var navigation = useNavigation();\n  useEffect(function () {\n    Jwt().then(function (token) {\n      setToken(token);\n      setIsLoading(false);\n    });\n  }, []);\n\n  var filteredScreens = function filteredScreens(props) {\n    var filteredProps = _extends(_objectSpread(_objectSpread({}, props), {}, {\n      state: _objectSpread(_objectSpread({}, props.state), {}, {\n        routes: props.state.routes.filter(function (p) {\n          if (!hiddenScreens.includes(p.name)) return p;\n        })\n      })\n    }));\n\n    return filteredProps;\n  };\n\n  function logoff() {\n    AsyncStorage.removeItem(TOKEN_KEY).then(function () {\n      return navigation.navigate(\"Inicial\");\n    });\n  }\n\n  if (isLoading) {\n    return React.createElement(LoadingScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return React.createElement(Drawer.Navigator, {\n    drawerStyle: {\n      backgroundColor: Color.SECONDARY\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(View, {\n        style: tailwind(\"flex flex-1 justify-between\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: tailwind(\"w-full h-32\"),\n        source: require(\"../assets/imgs/logo-dark.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }), React.createElement(DrawerItemList, _extends({}, filteredScreens(props), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableNativeFeedback, {\n        style: tailwind(\"flex-row justify-between mx-5\"),\n        onPress: function onPress() {\n          return logoff();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#888888'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      }, \"Logoff\"))), React.createElement(View, {\n        style: tailwind(\"m-5\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 200,\n          height: 50,\n          resizeMode: 'contain',\n          alignSelf: \"center\"\n        },\n        source: require(\"../assets/imgs/logo-senai-principal.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      })));\n    },\n    drawerContentOptions: {\n      inactiveTintColor: \"#888888\",\n      activeTintColor: \"#FFF\",\n      activeBackgroundColor: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, (token == null ? void 0 : token.Role) == TipoUsuario.CANDIDATO && React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: CHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), (token == null ? void 0 : token.Role) == TipoUsuario.EMPRESA && React.createElement(React.Fragment, null, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: EHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Candidaturas\",\n    component: EVagaCandidaturas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  })));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Matheus/Documentos/Projetos/Programacao/React Native/ConexaoVagas-App/screens/master.tsx"],"names":["AsyncStorage","createDrawerNavigator","DrawerItemList","createStackNavigator","React","useEffect","useState","tailwind","Jwt","Color","TipoUsuario","CHome","EHome","EVagaCandidaturas","TouchableNativeFeedback","TOKEN_KEY","useNavigation","Drawer","Stack","Master","token","setToken","isLoading","setIsLoading","hiddenScreens","navigation","then","filteredScreens","props","filteredProps","state","routes","filter","p","includes","name","logoff","removeItem","navigate","backgroundColor","SECONDARY","require","color","width","height","resizeMode","alignSelf","inactiveTintColor","activeTintColor","activeBackgroundColor","Role","CANDIDATO","EMPRESA","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { createDrawerNavigator, DrawerView, DrawerItemList, DrawerContentComponentProps, DrawerContentOptions } from '@react-navigation/drawer';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { StyleSheet, Switch, Text, View, Image, ActivityIndicator } from 'react-native'\r\nimport tailwind from 'tailwind-rn';\r\nimport { Jwt } from '../services/auth';\r\nimport { Color } from '../styles/global';\r\nimport { TipoUsuario } from '../utils/enums';\r\nimport { CHome } from './c-home';\r\nimport EHome from './e-home';\r\nimport Vagas from './c-vagas';\r\nimport { AppLoading } from 'expo';\r\nimport { color } from 'react-native-reanimated';\r\nimport EVagaCandidaturas from './e-vaga-candidaturas';\r\nimport { TouchableNativeFeedback } from 'react-native-gesture-handler';\r\nimport { TOKEN_KEY } from '../api/apisettings';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function Master() {\r\n    // const [darkTheme, setDarkTheme] = useState(false);\r\n    const [token, setToken] = useState<any>();\r\n    const [isLoading, setIsLoading] = useState<Boolean>(true)\r\n    \r\n    const hiddenScreens = [\"Candidaturas\"];\r\n    const navigation = useNavigation();\r\n\r\n    // useEffect(() => {\r\n    //     AsyncStorage.setItem(\"darkTheme\", darkTheme.toString())\r\n    // }, [darkTheme])\r\n\r\n    useEffect(() => {\r\n        Jwt().then(token => {\r\n            setToken(token);\r\n            setIsLoading(false);\r\n        })\r\n    }, [])\r\n\r\n    const filteredScreens = (props: DrawerContentComponentProps<DrawerContentOptions>) => {\r\n        let filteredProps: DrawerContentComponentProps<DrawerContentOptions> = Object.assign({\r\n            ...props,\r\n            state: {\r\n                ...props.state,\r\n                routes: props.state.routes.filter(p => {\r\n                    if (!hiddenScreens.includes(p.name))\r\n                        return p;\r\n                })\r\n            }\r\n        })\r\n\r\n        return filteredProps;\r\n    }\r\n\r\n    function logoff() {\r\n        AsyncStorage.removeItem(TOKEN_KEY).then(() => navigation.navigate(\"Inicial\"))\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <LoadingScreen/>\r\n    }\r\n\r\n    return (\r\n        <Drawer.Navigator\r\n            drawerStyle={{ backgroundColor: Color.SECONDARY }}\r\n            drawerContent={(props) => (\r\n                <View style={tailwind(\"flex flex-1 justify-between\")}>\r\n                    {/* Parte de cima */}\r\n                    <View>\r\n                        <Image style={tailwind(\"w-full h-32\")}\r\n                                source={require('../assets/imgs/logo-dark.png')}></Image>\r\n\r\n                        <DrawerItemList {...filteredScreens(props)} />\r\n\r\n                        <TouchableNativeFeedback style={tailwind(\"flex-row justify-between mx-5\")}\r\n                                                onPress={() => logoff()}>\r\n                            <Text style={{color: '#888888'}}>Logoff</Text>\r\n                        </TouchableNativeFeedback>\r\n\r\n\r\n                        {/* <View style={tailwind(\"flex-row justify-between mx-5\")}>\r\n                            <Text style={{color: darkTheme ? \"#BBBBBB\" : \"#888888\"}}>Tema Escuro</Text>\r\n                            <Switch\r\n                                    trackColor={{ false: \"#767577\", true: Color.PRIMARY2 }}\r\n                                    thumbColor={darkTheme ? Color.PRIMARY : \"#f4f3f4\"}\r\n                                    onValueChange={(e) => setDarkTheme(e)}\r\n                                    value={darkTheme}/>\r\n                        </View> */}\r\n                    </View>\r\n                    {/* Footer */}\r\n                    {/* É necessario encapsular dentro de uma View para manter o ratio. */}\r\n                    <View style={tailwind(\"m-5\")}>\r\n                        <Image style={{\r\n                            width: 200,\r\n                            height: 50,\r\n                            resizeMode: 'contain',\r\n                            alignSelf: \"center\"\r\n                        }}\r\n                            source={require('../assets/imgs/logo-senai-principal.png')} />\r\n                    </View>\r\n                </View>\r\n            )}\r\n            drawerContentOptions={{\r\n                inactiveTintColor: \"#888888\",\r\n                activeTintColor: \"#FFF\",\r\n                activeBackgroundColor: \"\",\r\n            }}>\r\n            {token?.Role == TipoUsuario.CANDIDATO && (\r\n                <Drawer.Screen name=\"Home\" component={CHome} />\r\n            )}\r\n            {token?.Role == TipoUsuario.EMPRESA && (\r\n                <>\r\n                    <Drawer.Screen name=\"Home\" component={EHome} />\r\n                    <Drawer.Screen name=\"Candidaturas\" component={EVagaCandidaturas} />\r\n                </>\r\n            )}\r\n            {/* <Drawer.Screen name=\"Home\" component={EHome} /> */}\r\n\r\n        </Drawer.Navigator>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({})\r\n"]},"metadata":{},"sourceType":"module"}