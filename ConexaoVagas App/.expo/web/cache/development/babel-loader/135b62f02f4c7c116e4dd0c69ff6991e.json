{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Documentos\\\\Projetos\\\\Programacao\\\\React Native\\\\ConexaoVagas-App\\\\screens\\\\e-vaga-candidaturas.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport tailwind from 'tailwind-rn';\nimport VagaApi from \"../api/vagas\";\nimport CandidaturaApi from \"../api/candidatura\";\nimport { Vaga } from \"../models/vaga\";\nimport { Color } from \"../styles/global\";\nimport { TouchableNativeFeedback } from 'react-native-gesture-handler';\nexport default function EVagaCandidaturas(_ref) {\n  var _vaga$idEmpresaNaviga,\n      _this = this;\n\n  var route = _ref.route,\n      navigate = _ref.navigate;\n  var idVaga = route.params.idVaga;\n\n  var _useState = useState(new Vaga()),\n      _useState2 = _slicedToArray(_useState, 2),\n      vaga = _useState2[0],\n      setVaga = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      candidaturas = _useState4[0],\n      setCandidaturas = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  useEffect(function () {\n    Promise.all([VagaApi.buscarPorId(idVaga).then(function (data) {\n      return setVaga(data);\n    }), CandidaturaApi.listarPorVaga(idVaga).then(function (data) {\n      return setCandidaturas(data);\n    })]).then(function () {\n      return setIsLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: tailwind(\"flex-1 justify-center items-center\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Color.PRIMARY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: tailwind(\"m-2\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: candidaturas,\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.idCandidatura.toString();\n    },\n    ListHeaderComponent: React.createElement(View, {\n      style: tailwind(\"mt-4 mb-6\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: tailwind(\"text-center text-xl\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, vaga.titulo), React.createElement(Text, {\n      style: tailwind(\"text-center text-xs\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, (_vaga$idEmpresaNaviga = vaga.idEmpresaNavigation) == null ? void 0 : _vaga$idEmpresaNaviga.nomeFantasia)),\n    ListEmptyComponent: React.createElement(Text, {\n      style: {\n        marginTop: '50%',\n        alignSelf: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \"Nenhuma candidatura nessa vaga.\"),\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableNativeFeedback, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Matheus/Documentos/Projetos/Programacao/React Native/ConexaoVagas-App/screens/e-vaga-candidaturas.tsx"],"names":["React","useEffect","useState","tailwind","VagaApi","CandidaturaApi","Vaga","Color","TouchableNativeFeedback","EVagaCandidaturas","route","navigate","idVaga","params","vaga","setVaga","candidaturas","setCandidaturas","isLoading","setIsLoading","Promise","all","buscarPorId","then","data","listarPorVaga","PRIMARY","flexGrow","item","idCandidatura","toString","titulo","idEmpresaNavigation","nomeFantasia","marginTop","alignSelf","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FlatList, StyleSheet, Text, View, Image, ActivityIndicator } from 'react-native'\r\nimport tailwind from 'tailwind-rn'\r\nimport VagaApi from '../api/vagas';\r\nimport CandidaturaApi from '../api/candidatura';\r\nimport { Vaga } from '../models/vaga';\r\nimport { Candidatura } from '../models/candidatura';\r\nimport { Card } from '../components/card';\r\nimport { API_URL } from '../api/apisettings';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport Hr from '../components/hr';\r\nimport { Color } from '../styles/global';\r\nimport { TouchableNativeFeedback } from 'react-native-gesture-handler';\r\n\r\nexport default function EVagaCandidaturas({ route, navigate }: any) {\r\n    const { idVaga } = route.params;\r\n\r\n    const [vaga, setVaga] = useState<Vaga>(new Vaga());\r\n    const [candidaturas, setCandidaturas] = useState<Candidatura[]>([]);\r\n    const [isLoading, setIsLoading] = useState<Boolean>(true)\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n        VagaApi.buscarPorId(idVaga).then(data => setVaga(data)),\r\n        CandidaturaApi.listarPorVaga(idVaga).then(data => setCandidaturas(data))\r\n        ])\r\n        .then(() => setIsLoading(false))\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <View style={tailwind(\"flex-1 justify-center items-center\")}>\r\n                <ActivityIndicator size=\"large\" color={Color.PRIMARY} />\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View style={tailwind(\"m-2\")}>\r\n            <FlatList\r\n                data={candidaturas}\r\n                contentContainerStyle={{ flexGrow: 1 }}\r\n                keyExtractor={item => item.idCandidatura!.toString()}\r\n                ListHeaderComponent={\r\n                    <View style={tailwind(\"mt-4 mb-6\")}>\r\n                        <Text style={tailwind(\"text-center text-xl\")}>{vaga.titulo}</Text>\r\n                        <Text style={tailwind(\"text-center text-xs\")}>{vaga.idEmpresaNavigation?.nomeFantasia}</Text>\r\n                    </View>\r\n                }\r\n                ListEmptyComponent={\r\n                    <Text style={{ marginTop: '50%', alignSelf: 'center' }}>Nenhuma candidatura nessa vaga.</Text>\r\n                }\r\n                renderItem={({ item }) => (\r\n                    <TouchableNativeFeedback>\r\n\r\n                    </TouchableNativeFeedback>\r\n                    \r\n                )} />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({})\r\n"]},"metadata":{},"sourceType":"module"}