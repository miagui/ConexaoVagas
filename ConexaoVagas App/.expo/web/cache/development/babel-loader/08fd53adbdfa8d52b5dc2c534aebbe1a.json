{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Documentos\\\\Projetos\\\\Programacao\\\\React Native\\\\ConexaoVagas-App\\\\screens\\\\vagas.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport tailwind from 'tailwind-rn';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card } from \"../components/card\";\nimport { useNavigation } from '@react-navigation/native';\nimport Hr from \"../components/hr\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport MoneyDollarCircleLineIcon from \"../components/svgs/MoneyDollarCircleLineIcon\";\nimport MapPinLineIcon from \"../components/svgs/MapPinLineIcon\";\nimport VagaApi from \"../api/vagas\";\nimport HabilidadeApi from \"../api/habilidades\";\nimport { API_URL } from \"../api/apisettings\";\n\nvar ImgEmpresaDefault = require(\"../assets/imgs/default-empresa.png\");\n\nexport default function Vagas() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      vagas = _useState2[0],\n      setVagas = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      habilidades = _useState4[0],\n      setHabilidades = _useState4[1];\n\n  var _useState5 = useState({\n    titulo: \"\",\n    minSalario: 0,\n    idHabilidade: 0\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filtro = _useState6[0],\n      setFiltro = _useState6[1];\n\n  useEffect(function () {\n    VagaApi.listar().then(function (data) {\n      return setVagas(data);\n    });\n    HabilidadeApi.listar().then(function (data) {\n      return setHabilidades(data);\n    });\n  }, []);\n\n  function filtrarVagas() {\n    VagaApi.listarPorFiltro(filtro.titulo, filtro.minSalario, filtro.idHabilidade).then(function (data) {\n      return setVagas(data);\n    });\n  }\n\n  var navigation = useNavigation();\n  return React.createElement(View, {\n    style: tailwind(\"m-2\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: vagas,\n    keyExtractor: function keyExtractor(item) {\n      return item.idVaga.toString();\n    },\n    ListHeaderComponent: React.createElement(Text, {\n      style: tailwind(\"text-center text-xl mt-4 mb-6\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 39\n      }\n    }, \"Vagas\"),\n    renderItem: function renderItem(_ref) {\n      var _item$idEnderecoNavig, _item$habilidadeVaga;\n\n      var item = _ref.item;\n      return React.createElement(Card, {\n        style: tailwind(\"mb-3\"),\n        key: item.idVaga,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: tailwind(\"flex-row\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: API_URL + \"Empresa/Img/\" + item.idEmpresa\n        },\n        style: {\n          width: 30,\n          height: 30\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: tailwind(\"ml-5\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, \" \", item.titulo)), React.createElement(Hr, {\n        style: tailwind(\"my-2\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: tailwind(\"flex-row\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: tailwind(\"w-1/2\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: tailwind(\"flex-row\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, React.createElement(MoneyDollarCircleLineIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      }, \" R$ \", item.salario)), React.createElement(View, {\n        style: tailwind(\"flex-row\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, React.createElement(MapPinLineIcon, {\n        style: tailwind(\"flex-none\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      }, \" \", (_item$idEnderecoNavig = item.idEnderecoNavigation) == null ? void 0 : _item$idEnderecoNavig.localCompleto)), React.createElement(View, {\n        style: tailwind(\"flex-row\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      }, React.createElement(MaterialIcons, {\n        name: \"query_builder\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }, \" Expira em \", item.dataExpiracao))), React.createElement(View, {\n        style: tailwind(\"w-1/2 flex-row flex-wrap mx-2\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      }, (_item$habilidadeVaga = item.habilidadeVaga) == null ? void 0 : _item$habilidadeVaga.map(function (hv) {\n        var _habilidades$find;\n\n        return React.createElement(Text, {\n          style: tailwind(\"bg-gray-400 p-2 rounded-full m-1 h-8 flex items-center\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 41\n          }\n        }, (_habilidades$find = habilidades.find(function (h) {\n          return h.idHabilidade == hv.idHabilidade;\n        })) == null ? void 0 : _habilidades$find.nomeHabilidade);\n      }))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Matheus/Documentos/Projetos/Programacao/React Native/ConexaoVagas-App/screens/vagas.tsx"],"names":["React","useEffect","useState","tailwind","Card","useNavigation","Hr","MaterialIcons","MoneyDollarCircleLineIcon","MapPinLineIcon","VagaApi","HabilidadeApi","API_URL","ImgEmpresaDefault","require","Vagas","vagas","setVagas","habilidades","setHabilidades","titulo","minSalario","idHabilidade","filtro","setFiltro","listar","then","data","filtrarVagas","listarPorFiltro","navigation","item","idVaga","toString","uri","idEmpresa","width","height","salario","idEnderecoNavigation","localCompleto","dataExpiracao","habilidadeVaga","map","hv","find","h","nomeHabilidade","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport tailwind from 'tailwind-rn'\r\nimport { Button, FlatList, Image, StyleSheet, Text, View } from 'react-native'\r\nimport { Card } from '../components/card';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Hr from '../components/hr';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport TimeLineIcon from '../components/svgs/TimeLineIcon'\r\nimport MoneyDollarCircleLineIcon from '../components/svgs/MoneyDollarCircleLineIcon';\r\nimport MapPinLineIcon from '../components/svgs/MapPinLineIcon';\r\nimport VagaApi from '../api/vagas';\r\nimport HabilidadeApi from '../api/habilidades';\r\nimport CandidatoApi from '../api/candidatos';\r\nimport { Matching } from '../models/matching';\r\nimport { Jwt } from '../services/auth';\r\nimport { Vaga } from '../models/vaga';\r\nimport { Habilidade } from '../models/habilidade';\r\nimport { API_URL } from '../api/apisettings';\r\nconst  ImgEmpresaDefault = require('../assets/imgs/default-empresa.png');\r\n\r\n\r\nexport default function Vagas() {\r\n\r\n    const [vagas, setVagas] = useState<Vaga[]>([]);\r\n    const [habilidades, setHabilidades] = useState<Habilidade[]>([]);\r\n    // const [matches, setMatches] = useState<Matching[]>([])\r\n    const [filtro, setFiltro] = useState(\r\n        {\r\n            titulo: \"\",\r\n            minSalario: 0,\r\n            idHabilidade: 0\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        VagaApi.listar().then(data => setVagas(data));\r\n        HabilidadeApi.listar().then(data => setHabilidades(data));\r\n        // (async () => { \r\n        //     CandidatoApi.buscarPorId(await Jwt().then(t => t.jti)).then(data => setMatches(data.matching!))\r\n        // })\r\n    }, [])\r\n\r\n    function filtrarVagas() {\r\n        VagaApi.listarPorFiltro(filtro.titulo, filtro.minSalario, filtro.idHabilidade)\r\n            .then(data => setVagas(data))\r\n    }\r\n\r\n    const navigation = useNavigation();\r\n    return (\r\n        <View style={tailwind(\"m-2\")}>\r\n            <FlatList\r\n                data={vagas}\r\n                keyExtractor={item => item.idVaga!.toString()}\r\n                ListHeaderComponent={(<Text style={tailwind(\"text-center text-xl mt-4 mb-6\")}>Vagas</Text>)}\r\n                renderItem={({ item }) => (\r\n                    <Card style={tailwind(\"mb-3\")} key={item.idVaga}>\r\n                        <View style={tailwind(\"flex-row\")}>\r\n                            <Image source={{ uri: `${API_URL}Empresa/Img/${item.idEmpresa}` }}\r\n                                    style={{ width: 30, height: 30 }}/>\r\n                            <Text style={tailwind(\"ml-5\")}> {item.titulo}</Text>\r\n                        </View>\r\n                        <Hr style={tailwind(\"my-2\")} />\r\n                        <View style={tailwind(\"flex-row\")}>\r\n                            <View style={tailwind(\"w-1/2\")}>\r\n                                <View style={tailwind(\"flex-row\")}>\r\n                                    <MoneyDollarCircleLineIcon />\r\n                                    <Text> R$ {item.salario}</Text>\r\n                                </View>\r\n                                <View style={tailwind(\"flex-row\")}>\r\n                                    <MapPinLineIcon style={tailwind(\"flex-none\")} />\r\n                                    <Text> {item.idEnderecoNavigation?.localCompleto}</Text>\r\n                                </View>\r\n                                <View style={tailwind(\"flex-row\")}>\r\n                                    <MaterialIcons name=\"query_builder\"></MaterialIcons>\r\n                                    <Text> Expira em {item.dataExpiracao}</Text>\r\n                                </View>\r\n                            </View>\r\n\r\n                            <View style={tailwind(\"w-1/2 flex-row flex-wrap mx-2\")}>\r\n                                {item.habilidadeVaga?.map(hv => {\r\n                                    return (\r\n                                        <Text style={tailwind(\"bg-gray-400 p-2 rounded-full m-1 h-8 flex items-center\")}>\r\n                                            {habilidades.find((h: Habilidade) =>\r\n                                                h.idHabilidade == hv.idHabilidade)?.nomeHabilidade}\r\n                                        </Text>\r\n                                    )\r\n                                })}\r\n                            </View>\r\n                        </View>\r\n                    </Card>\r\n                )}\r\n            >\r\n            </FlatList>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({})\r\n"]},"metadata":{},"sourceType":"module"}