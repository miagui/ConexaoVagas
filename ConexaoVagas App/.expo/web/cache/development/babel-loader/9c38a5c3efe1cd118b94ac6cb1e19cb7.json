{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Documentos\\\\Projetos\\\\Programacao\\\\React Native\\\\ConexaoVagas-App\\\\screens\\\\master.tsx\";\nimport { createDrawerNavigator, DrawerItemList } from '@react-navigation/drawer';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport tailwind from 'tailwind-rn';\nimport { Jwt } from \"../services/auth\";\nimport { Color } from \"../styles/global\";\nimport { TipoUsuario } from \"../utils/enums\";\nimport { CHome } from \"./c-home\";\nimport EHome from \"./e-home\";\nvar Drawer = createDrawerNavigator();\nvar Stack = createStackNavigator();\nexport default function Master() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  useEffect(function () {}, []);\n  return React.createElement(Drawer.Navigator, {\n    drawerStyle: {\n      backgroundColor: Color.SECONDARY\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(View, {\n        style: tailwind(\"flex flex-1 justify-between\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: tailwind(\"w-full h-32\"),\n        source: require(\"../assets/imgs/logo-dark.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }), React.createElement(DrawerItemList, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: tailwind(\"m-5\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 200,\n          height: 50,\n          resizeMode: 'contain',\n          alignSelf: \"center\"\n        },\n        source: require(\"../assets/imgs/logo-senai-principal.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      })));\n    },\n    drawerContentOptions: {\n      inactiveTintColor: \"#888888\",\n      activeTintColor: \"#FFF\",\n      activeBackgroundColor: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, Jwt().then(function (token) {\n    if (token.jti == TipoUsuario.CANDIDATO) {\n      return React.createElement(Drawer.Screen, {\n        name: \"Home\",\n        component: CHome,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      });\n    } else if (token.jti == TipoUsuario.EMPRESA) {\n      return React.createElement(Drawer.Screen, {\n        name: \"Home\",\n        component: EHome,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      });\n    }\n  }));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Matheus/Documentos/Projetos/Programacao/React Native/ConexaoVagas-App/screens/master.tsx"],"names":["createDrawerNavigator","DrawerItemList","createStackNavigator","React","useEffect","useState","tailwind","Jwt","Color","TipoUsuario","CHome","EHome","Drawer","Stack","Master","token","setToken","backgroundColor","SECONDARY","props","require","width","height","resizeMode","alignSelf","inactiveTintColor","activeTintColor","activeBackgroundColor","then","jti","CANDIDATO","EMPRESA","styles","StyleSheet","create"],"mappings":";;;AACA,SAASA,qBAAT,EAA4CC,cAA5C,QAAkE,0BAAlE;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,GAAT;AACA,SAASC,KAAT;AACA,SAASC,WAAT;AACA,SAASC,KAAT;AACA,OAAOC,KAAP;AAGA,IAAMC,MAAM,GAAGZ,qBAAqB,EAApC;AACA,IAAMa,KAAK,GAAGX,oBAAoB,EAAlC;AAEA,eAAe,SAASY,MAAT,GAAkB;AAAA;;AAAA,kBAEHT,QAAQ,EAFL;AAAA;AAAA,MAEtBU,KAFsB;AAAA,MAEfC,QAFe;;AAQ7BZ,EAAAA,SAAS,CAAC,YAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAIA,SACI,oBAAC,MAAD,CAAQ,SAAR;AACI,IAAA,WAAW,EAAE;AAAEa,MAAAA,eAAe,EAAET,KAAK,CAACU;AAAzB,KADjB;AAEI,IAAA,aAAa,EAAE,uBAACC,KAAD;AAAA,aACX,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,QAAQ,CAAC,6BAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEA,QAAQ,CAAC,aAAD,CAAtB;AACI,QAAA,MAAM,EAAEc,OAAO,gCADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI,oBAAC,cAAD,eAAoBD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CAFJ,EAiBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,QAAQ,CAAC,KAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AACVe,UAAAA,KAAK,EAAE,GADG;AAEVC,UAAAA,MAAM,EAAE,EAFE;AAGVC,UAAAA,UAAU,EAAE,SAHF;AAIVC,UAAAA,SAAS,EAAE;AAJD,SAAd;AAMI,QAAA,MAAM,EAAEJ,OAAO,2CANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAjBJ,CADW;AAAA,KAFnB;AA+BI,IAAA,oBAAoB,EAAE;AAClBK,MAAAA,iBAAiB,EAAE,SADD;AAElBC,MAAAA,eAAe,EAAE,MAFC;AAGlBC,MAAAA,qBAAqB,EAAE;AAHL,KA/B1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoCKpB,GAAG,GAAGqB,IAAN,CAAW,UAAAb,KAAK,EAAI;AACjB,QAAIA,KAAK,CAACc,GAAN,IAAapB,WAAW,CAACqB,SAA7B,EAAwC;AACpC,aACI,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,MAApB;AAA2B,QAAA,SAAS,EAAEpB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,MAKK,IAAIK,KAAK,CAACc,GAAN,IAAapB,WAAW,CAACsB,OAA7B,EAAsC;AACvC,aACI,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,MAApB;AAA2B,QAAA,SAAS,EAAEpB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AACJ,GAXA,CApCL,CADJ;AAmDH;AAED,IAAMqB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { createDrawerNavigator, DrawerView, DrawerItemList } from '@react-navigation/drawer';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { StyleSheet, Switch, Text, View, Image } from 'react-native'\r\nimport tailwind from 'tailwind-rn';\r\nimport { Jwt } from '../services/auth';\r\nimport { Color } from '../styles/global';\r\nimport { TipoUsuario } from '../utils/enums';\r\nimport { CHome } from './c-home';\r\nimport EHome from './e-home';\r\nimport Vagas from './c-vagas';\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function Master() {\r\n    // const [darkTheme, setDarkTheme] = useState(false);\r\n    const [token, setToken] = useState();\r\n\r\n    // useEffect(() => {\r\n    //     AsyncStorage.setItem(\"darkTheme\", darkTheme.toString())\r\n    // }, [darkTheme])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <Drawer.Navigator\r\n            drawerStyle={{ backgroundColor: Color.SECONDARY }}\r\n            drawerContent={(props) => (\r\n                <View style={tailwind(\"flex flex-1 justify-between\")}>\r\n                    {/* Parte de cima */}\r\n                    <View>\r\n                        <Image style={tailwind(\"w-full h-32\")}\r\n                            source={require('../assets/imgs/logo-dark.png')}></Image>\r\n                        <DrawerItemList {...props} />\r\n                        {/* <View style={tailwind(\"flex-row justify-between mx-5\")}>\r\n                            <Text style={{color: darkTheme ? \"#BBBBBB\" : \"#888888\"}}>Tema Escuro</Text>\r\n                            <Switch\r\n                                    trackColor={{ false: \"#767577\", true: Color.PRIMARY2 }}\r\n                                    thumbColor={darkTheme ? Color.PRIMARY : \"#f4f3f4\"}\r\n                                    onValueChange={(e) => setDarkTheme(e)}\r\n                                    value={darkTheme}/>\r\n                        </View> */}\r\n                    </View>\r\n                    {/* Footer */}\r\n                    {/* Ã‰ necessario encapsular dentro de uma View para manter o ratio. */}\r\n                    <View style={tailwind(\"m-5\")}>\r\n                        <Image style={{\r\n                            width: 200,\r\n                            height: 50,\r\n                            resizeMode: 'contain',\r\n                            alignSelf: \"center\"\r\n                        }}\r\n                            source={require('../assets/imgs/logo-senai-principal.png')} />\r\n                    </View>\r\n                </View>\r\n            )}\r\n            drawerContentOptions={{\r\n                inactiveTintColor: \"#888888\",\r\n                activeTintColor: \"#FFF\",\r\n                activeBackgroundColor: \"\",\r\n            }}>\r\n            {Jwt().then(token => {\r\n                if (token.jti == TipoUsuario.CANDIDATO) {\r\n                    return (\r\n                        <Drawer.Screen name=\"Home\" component={CHome} />\r\n                    )\r\n                }\r\n                else if (token.jti == TipoUsuario.EMPRESA) {\r\n                    return (\r\n                        <Drawer.Screen name=\"Home\" component={EHome} />\r\n                    )\r\n                }\r\n            })}\r\n        </Drawer.Navigator>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({})\r\n"]},"metadata":{},"sourceType":"module"}