{"ast":null,"code":"import { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\nimport MatchesApi from \"../api/matching\";\nvar CONTROLLER = \"Candidato/\";\n\nfunction listar() {\n  return fetch(API_URL + CONTROLLER, {\n    method: \"GET\",\n    headers: {\n      authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\n    }\n  }).then(handleErrors).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.error(err);\n  });\n}\n\nfunction listarPorStatus(id) {\n  return fetch(API_URL + CONTROLLER + id, {\n    method: \"GET\",\n    headers: {\n      authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\n    }\n  }).then(handleErrors).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.error(err);\n  });\n}\n\nfunction salvar(candidato, id) {\n  var method = id === 0 ? 'POST' : 'PUT';\n  var urlRequest = id === 0 ? API_URL + CONTROLLER : API_URL + CONTROLLER + id;\n  return fetch(urlRequest, {\n    method: method,\n    body: JSON.stringify(candidato),\n    headers: {\n      'content-type': 'application/json',\n      authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\n    }\n  }).then(handleErrors).then(function () {\n    MatchesApi.atualizar();\n    return candidato;\n  }).catch(function (err) {\n    return console.error(err);\n  });\n}\n\nfunction uploadFoto(id, file) {\n  var img = new FormData();\n  img.append(\"file\", file, id.toString());\n  return fetch(API_URL + CONTROLLER + \"Img/upload/\" + id, {\n    method: \"POST\",\n    body: img,\n    headers: {\n      'Accept': '*/*',\n      authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\n    }\n  }).then(handleErrors).then(function () {\n    return id;\n  }).catch(function (err) {\n    return console.error(err);\n  });\n}\n\nfunction mudarStatus(id, idStatus) {\n  fetch(API_URL + CONTROLLER + (\"Status?id=\" + id + \"&idStatus=\" + idStatus), {\n    method: \"PUT\",\n    headers: {\n      'content-type': 'application/json',\n      authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\n    }\n  }).then(handleErrors).catch(function (err) {\n    return console.error(err);\n  });\n}\n\nexport default {\n  listar: listar,\n  buscarPorId: listarPorStatus,\n  salvar: salvar,\n  mudarStatus: mudarStatus\n};","map":{"version":3,"sources":["C:/Users/Matheus/Documentos/Projetos/Programacao/React Native/ConexaoVagas-App/api/candidatos.ts"],"names":["API_URL","handleErrors","TOKEN_KEY","MatchesApi","CONTROLLER","listar","fetch","method","headers","authorization","localStorage","getItem","then","response","json","catch","err","console","error","listarPorStatus","id","salvar","candidato","urlRequest","body","JSON","stringify","atualizar","uploadFoto","file","img","FormData","append","toString","mudarStatus","idStatus","buscarPorId"],"mappings":"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","sourcesContent":["import { Candidato } from \"../models/candidato\";\r\nimport { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\r\nimport MatchesApi from \"../api/matching\";\r\n\r\n// Define o controller de comunicação da API.\r\n// A URL ficaria assim:\r\n// http://localhost:5000/api/Candidato/\r\nconst CONTROLLER = \"Candidato/\";\r\n\r\n/**\r\n * Lista os candidatos.\r\n */\r\nfunction listar(): Promise<Candidato[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID do candidato\r\n * @returns O candidato buscado.\r\n */\r\nfunction listarPorStatus(id: number): Promise<Candidato> {\r\n    // http://localhost:5000/api/Candidato/5\r\n    return fetch(API_URL + CONTROLLER + id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param candidato Objeto candidato a ser adicionado/atualizado.\r\n * @param id ID do candidato a ser atualizado.  O valor é 0 quando apenas quer adicionar.\r\n * @returns Objeto candidato se a operação for feita com sucesso, caso contrário retorno nada.\r\n */\r\nfunction salvar(candidato: Candidato, id: number): Promise<Candidato> {\r\n\r\n    const method = (id === 0 ? 'POST' : 'PUT');\r\n    const urlRequest = (id === 0 ? API_URL + CONTROLLER : API_URL + CONTROLLER + id);\r\n\r\n    return fetch(urlRequest, {\r\n        method: method,\r\n        body: JSON.stringify(candidato),\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(() => {\r\n            MatchesApi.atualizar();\r\n            return candidato as any;\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID da Candidato\r\n * @param file Foto\r\n */\r\nfunction uploadFoto(id: number, file: Blob) {\r\n\r\n    var img = new FormData();\r\n    img.append(\"file\", file, id.toString());\r\n\r\n    return fetch(API_URL + CONTROLLER + \"Img/upload/\" + id, {\r\n        method: \"POST\",\r\n        body: img,\r\n        headers: {\r\n            'Accept': '*/*',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(() => id)\r\n        .catch(err => console.error(err));\r\n}\r\n\r\nfunction mudarStatus(id: number, idStatus: number): void {\r\n\r\n        fetch(API_URL + CONTROLLER + `Status?id=${id}&idStatus=${idStatus}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .catch(err => console.error(err));\r\n}\r\n\r\nexport default {listar, buscarPorId: listarPorStatus, salvar, mudarStatus}"]},"metadata":{},"sourceType":"module"}