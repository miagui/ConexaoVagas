{"ast":null,"code":"import { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\nimport MatchesApi from \"../api/matching\";\nvar CONTROLLER = \"Vaga/\";\n\nfunction listar() {\n  return fetch(API_URL + CONTROLLER, {\n    method: \"GET\",\n    headers: {\n      authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\n    }\n  }).then(handleErrors).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.error(err);\n  });\n}\n\nfunction buscarPorId(id) {\n  return fetch(API_URL + CONTROLLER + id, {\n    method: \"GET\",\n    headers: {\n      authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\n    }\n  }).then(handleErrors).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.error(err);\n  });\n}\n\nfunction listarPorEmpresa(id) {\n  return fetch(API_URL + CONTROLLER + (\"Empresa/\" + id), {\n    method: \"GET\",\n    headers: {\n      authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\n    }\n  }).then(handleErrors).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.error(err);\n  });\n}\n\nfunction listarPorFiltro(titulo, minSalario, idHabilidade) {\n  var filtro = \"Filtro?titulo=\" + titulo + \"&minSalario=\" + minSalario + \"&id=\" + idHabilidade;\n  return fetch(API_URL + CONTROLLER + filtro, {\n    method: \"GET\",\n    headers: {\n      authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\n    }\n  }).then(handleErrors).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.error(err);\n  });\n}\n\nfunction salvar(vaga, id) {\n  var method = id === 0 ? 'POST' : 'PUT';\n  var urlRequest = id === 0 ? API_URL + CONTROLLER : API_URL + CONTROLLER + id;\n  return fetch(urlRequest, {\n    method: method,\n    body: JSON.stringify(vaga),\n    headers: {\n      'content-type': 'application/json',\n      authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\n    }\n  }).then(handleErrors).then(function () {\n    MatchesApi.atualizar();\n    return vaga;\n  }).catch(function (err) {\n    return console.error(err);\n  });\n}\n\nfunction deletar(id) {\n  fetch(API_URL + CONTROLLER + id, {\n    method: 'DELETE',\n    headers: {\n      authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\n    }\n  }).then(handleErrors).then(function (response) {\n    return response.json();\n  }).catch(function (err) {\n    return console.error(err);\n  });\n}\n\nexport default {\n  listar: listar,\n  listarPorEmpresa: listarPorEmpresa,\n  listarPorFiltro: listarPorFiltro,\n  buscarPorId: buscarPorId,\n  salvar: salvar,\n  deletar: deletar\n};","map":{"version":3,"sources":["C:/Users/Matheus/Documentos/Projetos/Programacao/React Native/ConexaoVagas-App/api/vagas.ts"],"names":["API_URL","handleErrors","TOKEN_KEY","MatchesApi","CONTROLLER","listar","fetch","method","headers","authorization","localStorage","getItem","then","response","json","catch","err","console","error","buscarPorId","id","listarPorEmpresa","listarPorFiltro","titulo","minSalario","idHabilidade","filtro","salvar","vaga","urlRequest","body","JSON","stringify","atualizar","deletar"],"mappings":"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","sourcesContent":["import { Vaga } from \"../models/vaga\";\r\nimport { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\r\nimport MatchesApi from \"../api/matching\";\r\n\r\nconst CONTROLLER = \"Vaga/\";\r\n\r\n/**\r\n * Lista os vagas.\r\n */\r\nfunction listar(): Promise<Vaga[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID do vaga\r\n * @returns O vaga buscado.\r\n */\r\nfunction buscarPorId(id: number): Promise<Vaga> {\r\n    return fetch(API_URL + CONTROLLER + id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param id ID da empresa.\r\n */\r\nfunction listarPorEmpresa(id: number): Promise<Vaga[]> {\r\n    return fetch(API_URL + CONTROLLER + `Empresa/${id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n/**\r\n * \r\n * @param titulo Nome da vaga\r\n * @param minSalario Salário mínimo\r\n * @param idHabilidade ID da habilidade relacionada\r\n */\r\nfunction listarPorFiltro(titulo: string, minSalario: number, idHabilidade: number): Promise<Vaga[]> {\r\n    var filtro: string = `Filtro?titulo=${titulo}&minSalario=${minSalario}&id=${idHabilidade}`\r\n\r\n    return fetch(API_URL + CONTROLLER + filtro, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * \r\n * @param vaga Objeto vaga a ser adicionado/atualizado.\r\n * @param id ID do vaga a ser atualizado.  O valor é 0 quando apenas quer adicionar.\r\n * @returns Objeto vaga se a operação for feita com sucesso, caso contrário retorno nada.\r\n */\r\nfunction salvar(vaga: Vaga, id: number): Promise<Vaga> {\r\n\r\n    const method = (id === 0 ? 'POST' : 'PUT');\r\n    const urlRequest = (id === 0 ? API_URL + CONTROLLER : API_URL + CONTROLLER + id);\r\n    return fetch(urlRequest, {\r\n        method: method,\r\n        body: JSON.stringify(vaga),\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(() => {\r\n            MatchesApi.atualizar();\r\n            return vaga as any;\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * Deleta uma vaga.\r\n * @param id ID da vaga\r\n */\r\nfunction deletar(id: number): void {\r\n    fetch(API_URL + CONTROLLER + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            authorization: 'Bearer ' + localStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => response.json())\r\n        .catch(err => console.error(err));\r\n}\r\n\r\nexport default {listar, listarPorEmpresa, listarPorFiltro, buscarPorId, salvar, deletar}"]},"metadata":{},"sourceType":"module"}