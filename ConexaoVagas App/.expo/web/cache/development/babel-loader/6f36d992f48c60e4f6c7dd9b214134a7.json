{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Documentos\\\\Projetos\\\\Programacao\\\\React Native\\\\ConexaoVagas-App\\\\screens\\\\login.tsx\";\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport tailwind from 'tailwind-rn';\nimport { API_URL, TOKEN_KEY } from \"../api/apisettings\";\nimport { parseJwt } from \"../services/auth\";\nimport { TipoUsuario } from \"../utils/enums\";\nexport default function Login() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      validEmail = _useState2[0],\n      setvalidEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      senha = _useState6[0],\n      setSenha = _useState6[1];\n\n  function isEmailValid() {\n    var pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    setvalidEmail(pattern.test(String(email).toLowerCase()));\n  }\n\n  var fazerLogin = function fazerLogin() {\n    var form = {\n      email: email,\n      senha: senha\n    };\n    fetch(API_URL + 'Login', {\n      method: 'POST',\n      body: JSON.stringify(form),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(function (response) {\n      if (!response.ok) alert(\"Senha ou E-mail incorretos\");else return response.json();\n    }).then(function (dados) {\n      if (dados.token !== undefined) {\n        localStorage.setItem(TOKEN_KEY, dados.token);\n        var jwt = parseJwt(dados.token);\n        if (jwt.Role == TipoUsuario.EMPRESA) navigation.navigate(\"Home\");else if (jwt.Role == TipoUsuario.CANDIDATO) navigation.navigate(\"Home\");\n      } else {\n        alert(\"E-mail existente\");\n      }\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../assets/imgs/imagem.jpg\"),\n    style: styles.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/imgs/logo-dark.png\"),\n    style: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.inputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.formTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, \"Digite seu email\"), React.createElement(TextInput, {\n    style: tailwind(' h-10 text-sm'),\n    textContentType: \"emailAddress\",\n    onChangeText: function onChangeText(e) {\n      isEmailValid();\n      setEmail(e);\n    },\n    value: email,\n    placeholder: \"Insira seu email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    style: styles.inputField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.formTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"Digite sua senha\"), React.createElement(TextInput, {\n    style: tailwind('h-10 text-sm'),\n    secureTextEntry: true,\n    onChangeText: function onChangeText(e) {\n      return setSenha(e);\n    },\n    value: senha,\n    placeholder: \"Insira sua senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    style: styles.buttonLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    disabled: !validEmail || senha.length == 0,\n    title: \"Login\",\n    color: \"#CD322B\",\n    onPress: fazerLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }))))));\n}\nvar styles = StyleSheet.create({\n  logo: {\n    height: 250,\n    width: '100%'\n  },\n  background: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  form: {\n    backgroundColor: 'white',\n    width: '80%',\n    alignSelf: 'center',\n    padding: 20,\n    borderRadius: 5,\n    marginTop: '5%',\n    marginBottom: '30%'\n  },\n  inputField: {\n    marginBottom: '8%',\n    borderBottomColor: '#000',\n    borderBottomWidth: 1\n  },\n  formTitle: {\n    fontSize: '1.5rem',\n    fontWeight: \"700\"\n  },\n  buttonLogin: {\n    width: '40%',\n    height: 30,\n    alignSelf: 'center',\n    marginTop: '10%'\n  }\n});","map":{"version":3,"sources":["C:/Users/Matheus/Documentos/Projetos/Programacao/React Native/ConexaoVagas-App/screens/login.tsx"],"names":["useNavigation","React","useState","tailwind","API_URL","TOKEN_KEY","parseJwt","TipoUsuario","Login","navigation","validEmail","setvalidEmail","email","setEmail","senha","setSenha","isEmailValid","pattern","test","String","toLowerCase","fazerLogin","form","fetch","method","body","JSON","stringify","headers","then","response","ok","alert","json","dados","token","undefined","localStorage","setItem","jwt","Role","EMPRESA","navigate","CANDIDATO","catch","error","console","require","styles","background","logo","inputField","formTitle","e","buttonLogin","length","StyleSheet","create","height","width","flex","resizeMode","justifyContent","backgroundColor","alignSelf","padding","borderRadius","marginTop","marginBottom","borderBottomColor","borderBottomWidth","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport React, { useState } from 'react'\r\nimport { ImageBackground, Image, StyleSheet, Text, TextInput, View, Button } from 'react-native'\r\nimport tailwind from 'tailwind-rn'\r\nimport { API_URL, TOKEN_KEY } from '../api/apisettings';\r\nimport { parseJwt } from '../services/auth';\r\nimport { TipoUsuario } from '../utils/enums';\r\n\r\n\r\nexport default function Login() {\r\n\r\n    \r\n    let navigation = useNavigation();\r\n    \r\n    const [validEmail, setvalidEmail] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    \r\n    function isEmailValid() {\r\n        \r\n        let pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        setvalidEmail( pattern.test(String(email).toLowerCase())\r\n        )}\r\n    const fazerLogin = () => {\r\n        const form = {\r\n            email: email,\r\n            senha: senha\r\n        }\r\n\r\n        fetch(API_URL + 'Login', {\r\n            method: 'POST',\r\n            body: JSON.stringify(form),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) alert(\"Senha ou E-mail incorretos\")\r\n                else return response.json()\r\n            })\r\n            .then(dados => {\r\n                if (dados.token !== undefined) {\r\n                    localStorage.setItem(TOKEN_KEY, dados.token)\r\n                    let jwt = parseJwt(dados.token)\r\n                    if (jwt.Role == TipoUsuario.EMPRESA) navigation.navigate(\"Home\");\r\n                    else if (jwt.Role == TipoUsuario.CANDIDATO) navigation.navigate(\"Home\");\r\n                } else {\r\n                    alert(\"E-mail existente\")\r\n                }\r\n            })\r\n            .catch(error => console.error(error))\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <ImageBackground source={require('../assets/imgs/imagem.jpg')} style={styles.background}>\r\n                <Image source={require('../assets/imgs/logo-dark.png')}  style={styles.logo as any}></Image>\r\n                <View>\r\n                    <View style={styles.form}>\r\n                        <View style={styles.inputField}>\r\n                            <Text style={styles.formTitle}>Digite seu email</Text>\r\n                            <TextInput\r\n                                style={tailwind(' h-10 text-sm')}\r\n                                textContentType = \"emailAddress\"\r\n                                onChangeText={e =>{\r\n                                    isEmailValid()\r\n                                    setEmail(e)}}  value={email}\r\n                                placeholder=\"Insira seu email\" />\r\n                        </View>\r\n                        <View style={styles.inputField}>\r\n\r\n                            <Text style={styles.formTitle}>Digite sua senha</Text>\r\n                            <TextInput\r\n                                style={tailwind('h-10 text-sm')}\r\n                                secureTextEntry={true}\r\n                                onChangeText={e => setSenha(e)} value={senha}\r\n                                placeholder=\"Insira sua senha\" />\r\n                        </View>\r\n                        <View style={styles.buttonLogin}>\r\n                            <Button\r\n                                disabled = {!validEmail || senha.length == 0}\r\n                                title='Login'\r\n                                color='#CD322B'\r\n                                onPress = {fazerLogin}\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </ImageBackground>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    logo: {\r\n        height: 250,\r\n        width: '100%'\r\n    },\r\n    background: {\r\n        flex: 1,\r\n        resizeMode: \"cover\",\r\n        justifyContent: \"center\"\r\n    },\r\n    form: {\r\n        backgroundColor: 'white',\r\n        width: '80%',\r\n        alignSelf: 'center',\r\n        padding: 20,\r\n        borderRadius: 5,\r\n        marginTop: '5%',\r\n        marginBottom: '30%'\r\n\r\n    },\r\n    inputField: {\r\n        marginBottom: '8%',\r\n        borderBottomColor: '#000',\r\n        borderBottomWidth: 1\r\n        // textDecorationLine: \"underline\",\r\n        // textDecorationStyle: \"solid\",\r\n        // textDecorationColor: \"#000\",\r\n    },\r\n    formTitle: {\r\n        fontSize: '1.5rem' as any,\r\n        fontWeight: \"700\",\r\n\r\n    },\r\n    buttonLogin: {\r\n        width: '40%',\r\n        height: 30,\r\n        alignSelf: 'center',\r\n        marginTop: '10%'\r\n\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}