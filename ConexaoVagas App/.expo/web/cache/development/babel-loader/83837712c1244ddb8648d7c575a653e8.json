{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Documentos\\\\Projetos\\\\Programacao\\\\React Native\\\\ConexaoVagas-App\\\\screens\\\\e-vaga-candidaturas.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport tailwind from 'tailwind-rn';\nimport VagaApi from \"../api/vagas\";\nimport CandidaturaApi from \"../api/candidatura\";\nimport { Vaga } from \"../models/vaga\";\nimport { Card } from \"../components/card\";\nimport { API_URL } from \"../api/apisettings\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport Hr from \"../components/hr\";\nimport { Color } from \"../styles/global\";\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\nexport default function Screen(_ref) {\n  var _vaga$idEmpresaNaviga,\n      _this = this;\n\n  var route = _ref.route,\n      navigate = _ref.navigate;\n  var idVaga = route.params.idVaga;\n\n  var _useState = useState(new Vaga()),\n      _useState2 = _slicedToArray(_useState, 2),\n      vaga = _useState2[0],\n      setVaga = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      candidaturas = _useState4[0],\n      setCandidaturas = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  useEffect(function () {\n    Promise.all([VagaApi.buscarPorId(idVaga).then(function (data) {\n      return setVaga(data);\n    }), CandidaturaApi.listarPorVaga(idVaga).then(function (data) {\n      return setCandidaturas(data);\n    })]).then(function () {\n      return setIsLoading(false);\n    });\n  }, []);\n  if (isLoading) React.createElement(View, {\n    style: tailwind(\"flex-1 justify-center items-center\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: Color.PRIMARY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: candidaturas,\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.idCandidatura.toString();\n    },\n    ListHeaderComponent: React.createElement(View, {\n      style: tailwind(\"mt-4 mb-6\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: tailwind(\"text-center text-xl\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, vaga.titulo), React.createElement(Text, {\n      style: tailwind(\"text-center text-xs\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, (_vaga$idEmpresaNaviga = vaga.idEmpresaNavigation) == null ? void 0 : _vaga$idEmpresaNaviga.nomeFantasia)),\n    ListEmptyComponent: React.createElement(Text, {\n      style: {\n        marginTop: '50%',\n        alignSelf: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \"Nenhuma candidatura nessa vaga.\"),\n    renderItem: function renderItem(_ref2) {\n      var _item$idCandidatoNavi, _item$idCandidatoNavi2, _item$idCandidatoNavi3, _item$idCandidatoNavi4, _item$idCandidatoNavi5;\n\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        style: tailwind(\"mb-2\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: tailwind(\"flex-row\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: API_URL + \"Candidato/Img/\" + item.idCandidato\n        },\n        style: {\n          width: 30,\n          height: 30\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: tailwind(\"ml-5\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, \" \", ((_item$idCandidatoNavi = item.idCandidatoNavigation) == null ? void 0 : _item$idCandidatoNavi.nome) + \" \" + ((_item$idCandidatoNavi2 = item.idCandidatoNavigation) == null ? void 0 : _item$idCandidatoNavi2.sobrenome))), React.createElement(Hr, {\n        style: tailwind(\"my-2\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: tailwind(\"flex-row\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: tailwind(\"mr-3\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: tailwind(\"flex-row\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: \"school\",\n        size: 18,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      }, \" \", (_item$idCandidatoNavi3 = item.idCandidatoNavigation) == null ? void 0 : _item$idCandidatoNavi3.curso)), React.createElement(View, {\n        style: tailwind(\"flex-row\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: \"map-marker-outline\",\n        size: 18,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      }, \" \", (_item$idCandidatoNavi4 = item.idCandidatoNavigation) == null ? void 0 : (_item$idCandidatoNavi5 = _item$idCandidatoNavi4.idEnderecoNavigation) == null ? void 0 : _item$idCandidatoNavi5.localCompleto)))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n}\nexport function EVagaCandidaturas() {\n  React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Master\",\n    component: Screen,\n    options: {\n      headerStyle: {\n        backgroundColor: Color.SECONDARY\n      },\n      headerTintColor: Color.TINT,\n      headerTitleStyle: {\n        fontFamily: \"Roboto\"\n      },\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Matheus/Documentos/Projetos/Programacao/React Native/ConexaoVagas-App/screens/e-vaga-candidaturas.tsx"],"names":["React","useEffect","useState","tailwind","VagaApi","CandidaturaApi","Vaga","Card","API_URL","MaterialCommunityIcons","Hr","Color","createStackNavigator","Stack","Screen","route","navigate","idVaga","params","vaga","setVaga","candidaturas","setCandidaturas","isLoading","setIsLoading","Promise","all","buscarPorId","then","data","listarPorVaga","PRIMARY","flexGrow","item","idCandidatura","toString","titulo","idEmpresaNavigation","nomeFantasia","marginTop","alignSelf","uri","idCandidato","width","height","idCandidatoNavigation","nome","sobrenome","curso","idEnderecoNavigation","localCompleto","EVagaCandidaturas","headerStyle","backgroundColor","SECONDARY","headerTintColor","TINT","headerTitleStyle","fontFamily","headerShown","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { FlatList, StyleSheet, Text, View, Image, ActivityIndicator } from 'react-native'\r\nimport tailwind from 'tailwind-rn'\r\nimport VagaApi from '../api/vagas';\r\nimport CandidaturaApi from '../api/candidatura';\r\nimport { Vaga } from '../models/vaga';\r\nimport { Candidatura } from '../models/candidatura';\r\nimport { Card } from '../components/card';\r\nimport { API_URL } from '../api/apisettings';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport Hr from '../components/hr';\r\nimport { Color } from '../styles/global';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function Screen({ route, navigate }: any) {\r\n    const { idVaga } = route.params;\r\n\r\n    const [vaga, setVaga] = useState<Vaga>(new Vaga());\r\n    const [candidaturas, setCandidaturas] = useState<Candidatura[]>([]);\r\n    const [isLoading, setIsLoading] = useState<Boolean>(true)\r\n\r\n    useEffect(() => {\r\n        Promise.all([VagaApi.buscarPorId(idVaga).then(data => setVaga(data)),\r\n                     CandidaturaApi.listarPorVaga(idVaga).then(data => setCandidaturas(data))\r\n                    ])\r\n                    .then(() => setIsLoading(false))\r\n\r\n    }, [])\r\n\r\n    if (isLoading) (\r\n        <View style={tailwind(\"flex-1 justify-center items-center\")}>\r\n            <ActivityIndicator size=\"large\" color={Color.PRIMARY}/>\r\n        </View>\r\n    )\r\n\r\n    return (\r\n        <View>\r\n            <FlatList\r\n                data={candidaturas}\r\n                contentContainerStyle={{flexGrow:1}}\r\n                keyExtractor={item => item.idCandidatura!.toString()}\r\n                ListHeaderComponent={\r\n                    <View style={tailwind(\"mt-4 mb-6\")}>\r\n                        <Text style={tailwind(\"text-center text-xl\")}>{vaga.titulo}</Text>\r\n                        <Text style={tailwind(\"text-center text-xs\")}>{vaga.idEmpresaNavigation?.nomeFantasia}</Text>\r\n                    </View>\r\n                }\r\n                ListEmptyComponent={\r\n                    <Text style={{marginTop:'50%', alignSelf:'center'}}>Nenhuma candidatura nessa vaga.</Text>\r\n                }\r\n                renderItem={({ item }) => (\r\n                    <Card style={tailwind(\"mb-2\")}>\r\n                        {/* Conteudo de cima */}\r\n                        <View style={tailwind(\"flex-row\")}>\r\n                            <Image source={{ uri: `${API_URL}Candidato/Img/${item.idCandidato}` }}\r\n                                style={{ width: 30, height: 30 }} />\r\n                            <Text style={tailwind(\"ml-5\")}> {`${item.idCandidatoNavigation?.nome} ${item.idCandidatoNavigation?.sobrenome}`}</Text>\r\n                        </View>\r\n                        <Hr style={tailwind(\"my-2\")} />\r\n                        {/* Conteudo debaixo */}\r\n                        <View style={tailwind(\"flex-row\")}>\r\n                            <View style={tailwind(\"mr-3\")}>\r\n                                <View style={tailwind(\"flex-row\")}>\r\n                                    <MaterialCommunityIcons name=\"school\" size={18}></MaterialCommunityIcons>\r\n                                    <Text> {item.idCandidatoNavigation?.curso}</Text>\r\n                                </View>\r\n                                <View style={tailwind(\"flex-row\")}>\r\n                                    <MaterialCommunityIcons name=\"map-marker-outline\" size={18}></MaterialCommunityIcons>\r\n                                    <Text> {item.idCandidatoNavigation?.idEnderecoNavigation?.localCompleto}</Text>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    </Card>\r\n                )} />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport function EVagaCandidaturas() {\r\n    <Stack.Navigator>\r\n        <Stack.Screen\r\n            name=\"Master\"\r\n            component={Screen}\r\n            options={{\r\n              headerStyle: { backgroundColor: Color.SECONDARY },\r\n              headerTintColor: Color.TINT,\r\n              headerTitleStyle: { fontFamily: \"Roboto\" },\r\n              headerShown: false,\r\n            }}/>\r\n            \r\n    </Stack.Navigator>\r\n}\r\n\r\nconst styles = StyleSheet.create({})\r\n"]},"metadata":{},"sourceType":"module"}