{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Documentos\\\\Projetos\\\\Programacao\\\\React Native\\\\ConexaoVagas-App\\\\screens\\\\master.tsx\";\nimport { createDrawerNavigator, DrawerItemList } from '@react-navigation/drawer';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport tailwind from 'tailwind-rn';\nimport { Jwt } from \"../services/auth\";\nimport { Color } from \"../styles/global\";\nimport { TipoUsuario } from \"../utils/enums\";\nimport { CHome } from \"./c-home\";\nimport EHome from \"./e-home\";\nvar Drawer = createDrawerNavigator();\nvar Stack = createStackNavigator();\nexport default function Master() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  useEffect(function () {\n    Jwt().then(function (token) {\n      setToken(token);\n      setIsLoading(false);\n    });\n  }, []);\n  var visibleItems = ['HomeScreen', 'SettingsScreen', 'HelpScreen'];\n\n  var getVisible = function getVisible(item) {\n    return contains(item.key, visibleItems);\n  };\n\n  var getFilteredAndStyledItems = function getFilteredAndStyledItems(_ref) {\n    var items = _ref.items,\n        other = _objectWithoutProperties(_ref, [\"items\"]);\n\n    return React.createElement(DrawerItemList, _extends({\n      items: filter(getVisible, items)\n    }, other, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: tailwind(\"flex-1 justify-center items-center\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Color.PRIMARY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(Drawer.Navigator, {\n    drawerStyle: {\n      backgroundColor: Color.SECONDARY\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(View, {\n        style: tailwind(\"flex flex-1 justify-between\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: tailwind(\"w-full h-32\"),\n        source: require(\"../assets/imgs/logo-dark.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }), React.createElement(DrawerItemList, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: tailwind(\"m-5\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 200,\n          height: 50,\n          resizeMode: 'contain',\n          alignSelf: \"center\"\n        },\n        source: require(\"../assets/imgs/logo-senai-principal.png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      })));\n    },\n    drawerContentOptions: {\n      inactiveTintColor: \"#888888\",\n      activeTintColor: \"#FFF\",\n      activeBackgroundColor: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, (token == null ? void 0 : token.Role) == TipoUsuario.CANDIDATO && React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: CHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), (token == null ? void 0 : token.Role) == TipoUsuario.EMPRESA && React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: EHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Matheus/Documentos/Projetos/Programacao/React Native/ConexaoVagas-App/screens/master.tsx"],"names":["createDrawerNavigator","DrawerItemList","createStackNavigator","React","useEffect","useState","tailwind","Jwt","Color","TipoUsuario","CHome","EHome","Drawer","Stack","Master","token","setToken","isLoading","setIsLoading","then","visibleItems","getVisible","item","contains","key","getFilteredAndStyledItems","items","other","filter","PRIMARY","backgroundColor","SECONDARY","props","require","width","height","resizeMode","alignSelf","inactiveTintColor","activeTintColor","activeBackgroundColor","Role","CANDIDATO","EMPRESA","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { createDrawerNavigator, DrawerView, DrawerItemList } from '@react-navigation/drawer';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { StyleSheet, Switch, Text, View, Image, ActivityIndicator } from 'react-native'\r\nimport tailwind from 'tailwind-rn';\r\nimport { Jwt } from '../services/auth';\r\nimport { Color } from '../styles/global';\r\nimport { TipoUsuario } from '../utils/enums';\r\nimport { CHome } from './c-home';\r\nimport EHome from './e-home';\r\nimport Vagas from './c-vagas';\r\nimport { AppLoading } from 'expo';\r\nimport { color } from 'react-native-reanimated';\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function Master() {\r\n    // const [darkTheme, setDarkTheme] = useState(false);\r\n    const [token, setToken] = useState<any>();\r\n    const [isLoading, setIsLoading] = useState<Boolean>(true)\r\n\r\n    // useEffect(() => {\r\n    //     AsyncStorage.setItem(\"darkTheme\", darkTheme.toString())\r\n    // }, [darkTheme])\r\n\r\n    useEffect(() => {\r\n        Jwt().then(token => {\r\n            setToken(token);\r\n            setIsLoading(false);\r\n        })\r\n    }, [])\r\n\r\n    const visibleItems = ['HomeScreen', 'SettingsScreen', 'HelpScreen'];\r\n\r\n    const getVisible = item => contains(item.key, visibleItems);\r\n\r\n    const getFilteredAndStyledItems = ({ items, ...other }) => (\r\n        <DrawerItemList\r\n            items={filter(getVisible, items)}\r\n            {...other}\r\n        />\r\n    );\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <View style={tailwind(\"flex-1 justify-center items-center\")}>\r\n                <ActivityIndicator size=\"large\" color={Color.PRIMARY} />\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Drawer.Navigator\r\n            drawerStyle={{ backgroundColor: Color.SECONDARY }}\r\n            drawerContent={(props) => (\r\n                <View style={tailwind(\"flex flex-1 justify-between\")}>\r\n                    {/* Parte de cima */}\r\n                    <View>\r\n                        <Image style={tailwind(\"w-full h-32\")}\r\n                            source={require('../assets/imgs/logo-dark.png')}></Image>\r\n                        <DrawerItemList {...props} />\r\n                        {/* <View style={tailwind(\"flex-row justify-between mx-5\")}>\r\n                            <Text style={{color: darkTheme ? \"#BBBBBB\" : \"#888888\"}}>Tema Escuro</Text>\r\n                            <Switch\r\n                                    trackColor={{ false: \"#767577\", true: Color.PRIMARY2 }}\r\n                                    thumbColor={darkTheme ? Color.PRIMARY : \"#f4f3f4\"}\r\n                                    onValueChange={(e) => setDarkTheme(e)}\r\n                                    value={darkTheme}/>\r\n                        </View> */}\r\n                    </View>\r\n                    {/* Footer */}\r\n                    {/* É necessario encapsular dentro de uma View para manter o ratio. */}\r\n                    <View style={tailwind(\"m-5\")}>\r\n                        <Image style={{\r\n                            width: 200,\r\n                            height: 50,\r\n                            resizeMode: 'contain',\r\n                            alignSelf: \"center\"\r\n                        }}\r\n                            source={require('../assets/imgs/logo-senai-principal.png')} />\r\n                    </View>\r\n                </View>\r\n            )}\r\n            drawerContentOptions={{\r\n                inactiveTintColor: \"#888888\",\r\n                activeTintColor: \"#FFF\",\r\n                activeBackgroundColor: \"\",\r\n            }}>\r\n            {token?.Role == TipoUsuario.CANDIDATO && (\r\n                <Drawer.Screen name=\"Home\" component={CHome} />\r\n            )}\r\n            {token?.Role == TipoUsuario.EMPRESA && (\r\n                <Drawer.Screen name=\"Home\" component={EHome} />\r\n            )}\r\n            {/* <Drawer.Screen name=\"Home\" component={EHome} /> */}\r\n\r\n        </Drawer.Navigator>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({})\r\n"]},"metadata":{},"sourceType":"module"}