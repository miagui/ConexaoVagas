{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar CONTROLLER = \"Match/\";\n\nfunction listar() {\n  return _regeneratorRuntime.async(function listar$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = fetch;\n          _context.t1 = API_URL + CONTROLLER;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(TOKEN_KEY));\n\n        case 4:\n          _context.t2 = _context.sent;\n          _context.t3 = 'Bearer ' + _context.t2;\n          _context.t4 = {\n            authorization: _context.t3\n          };\n          _context.t5 = {\n            method: \"GET\",\n            headers: _context.t4\n          };\n          return _context.abrupt(\"return\", (0, _context.t0)(_context.t1, _context.t5).then(handleErrors).then(function (response) {\n            return response.json();\n          }).catch(function (err) {\n            return console.error(err);\n          }));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction atualizar() {\n  return _regeneratorRuntime.async(function atualizar$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.t0 = fetch;\n          _context2.t1 = API_URL + CONTROLLER;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(TOKEN_KEY));\n\n        case 4:\n          _context2.t2 = _context2.sent;\n          _context2.t3 = 'Bearer ' + _context2.t2;\n          _context2.t4 = {\n            authorization: _context2.t3\n          };\n          _context2.t5 = {\n            method: \"PUT\",\n            headers: _context2.t4\n          };\n          return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t1, _context2.t5).then(handleErrors).then(function (response) {\n            return response.json();\n          }).catch(function (err) {\n            return console.error(err);\n          }));\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default {\n  listar: listar,\n  atualizar: atualizar\n};","map":{"version":3,"sources":["C:/Users/Matheus/Documentos/Projetos/Programacao/React Native/ConexaoVagas-App/api/matching.ts"],"names":["API_URL","handleErrors","TOKEN_KEY","AsyncStorage","CONTROLLER","listar","fetch","getItem","authorization","method","headers","then","response","json","catch","err","console","error","atualizar"],"mappings":";AACA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,SAAhC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,IAAMC,UAAU,GAAG,QAAnB;;AAKA,SAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,wBACWC,KADX;AAAA,wBACiBN,OAAO,GAAGI,UAD3B;AAAA;AAAA,2CAI6CD,YAAY,CAACI,OAAb,CAAqBL,SAArB,CAJ7C;;AAAA;AAAA;AAAA,wBAI2B,SAJ3B;AAAA;AAIYM,YAAAA,aAJZ;AAAA;AAAA;AAEQC,YAAAA,MAFR,EAEgB,KAFhB;AAGQC,YAAAA,OAHR;AAAA;AAAA,sFAOSC,IAPT,CAOcV,YAPd,EAQSU,IART,CAQc,UAAAC,QAAQ,EAAI;AACd,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,WAVT,EAWSC,KAXT,CAWe,UAAAC,GAAG;AAAA,mBAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,WAXlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAeG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA,yBACWZ,KADX;AAAA,yBACiBN,OAAO,GAAGI,UAD3B;AAAA;AAAA,2CAI6CD,YAAY,CAACI,OAAb,CAAqBL,SAArB,CAJ7C;;AAAA;AAAA;AAAA,yBAI2B,SAJ3B;AAAA;AAIYM,YAAAA,aAJZ;AAAA;AAAA;AAEQC,YAAAA,MAFR,EAEgB,KAFhB;AAGQC,YAAAA,OAHR;AAAA;AAAA,0FAOSC,IAPT,CAOcV,YAPd,EAQSU,IART,CAQc,UAAAC,QAAQ,EAAI;AACd,mBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,WAVT,EAWSC,KAXT,CAWe,UAAAC,GAAG;AAAA,mBAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,WAXlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAe;AAACV,EAAAA,MAAM,EAANA,MAAD;AAASa,EAAAA,SAAS,EAATA;AAAT,CAAf","sourcesContent":["import { Matching } from \"../models/matching\";\r\nimport { API_URL, handleErrors, TOKEN_KEY } from \"./apisettings\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst CONTROLLER = \"Match/\";\r\n\r\n/**\r\n * Lista matching entre vagas e candidatos.\r\n */\r\nasync function listar(): Promise<Matching[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"GET\",\r\n        headers: {\r\n            authorization: 'Bearer ' + await AsyncStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n/**\r\n * Atualiza a relação de matching entre candidato e vaga.\r\n */\r\nasync function atualizar(): Promise<Matching[]> {\r\n    return fetch(API_URL + CONTROLLER, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            authorization: 'Bearer ' + await AsyncStorage.getItem(TOKEN_KEY)\r\n        }\r\n    })\r\n        .then(handleErrors)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n\r\nexport default {listar, atualizar}"]},"metadata":{},"sourceType":"module"}