{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport var setCustomTouchableNativeFeedback = function setCustomTouchableNativeFeedback(customProps) {\n  var TouchableNativeFeedbackRender = TouchableNativeFeedback.render;\n  var initialDefaultProps = TouchableNativeFeedback.defaultProps;\n  TouchableNativeFeedback.defaultProps = _objectSpread(_objectSpread({}, initialDefaultProps), customProps);\n\n  TouchableNativeFeedback.render = function render(props) {\n    var oldProps = props;\n    props = _objectSpread(_objectSpread({}, props), {}, {\n      style: [customProps.style, props.style]\n    });\n\n    try {\n      return TouchableNativeFeedbackRender.apply(this, arguments);\n    } finally {\n      props = oldProps;\n    }\n  };\n};\nexport var setCustomTouchableWithoutFeedback = function setCustomTouchableWithoutFeedback(customProps) {\n  var TouchableWithoutFeedbackRender = TouchableWithoutFeedback.render;\n  var initialDefaultProps = TouchableWithoutFeedback.defaultProps;\n  TouchableWithoutFeedback.defaultProps = _objectSpread(_objectSpread({}, initialDefaultProps), customProps);\n\n  TouchableWithoutFeedback.render = function render(props) {\n    var oldProps = props;\n    props = _objectSpread(_objectSpread({}, props), {}, {\n      style: [customProps.style, props.style]\n    });\n\n    try {\n      return TouchableWithoutFeedbackRender.apply(this, arguments);\n    } finally {\n      props = oldProps;\n    }\n  };\n};\nexport var setCustomTouchableOpacity = function setCustomTouchableOpacity(customProps) {\n  var TouchableOpacityRender = TouchableOpacity.render;\n  var initialDefaultProps = TouchableOpacity.defaultProps;\n  TouchableOpacity.defaultProps = _objectSpread(_objectSpread({}, initialDefaultProps), customProps);\n\n  TouchableOpacity.render = function render(props) {\n    var oldProps = props;\n    props = _objectSpread(_objectSpread({}, props), {}, {\n      style: [customProps.style, props.style]\n    });\n\n    try {\n      return TouchableOpacityRender.apply(this, arguments);\n    } finally {\n      props = oldProps;\n    }\n  };\n};\nexport var setCustomTouchableHighlight = function setCustomTouchableHighlight(customProps) {\n  var TouchableHighlightRender = TouchableHighlight.render;\n  var initialDefaultProps = TouchableHighlight.defaultProps;\n  TouchableHighlight.defaultProps = _objectSpread(_objectSpread({}, initialDefaultProps), customProps);\n\n  TouchableHighlight.render = function render(props) {\n    var oldProps = props;\n    props = _objectSpread(_objectSpread({}, props), {}, {\n      style: [customProps.style, props.style]\n    });\n\n    try {\n      return TouchableHighlightRender.apply(this, arguments);\n    } finally {\n      props = oldProps;\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Matheus/Documentos/Projetos/Programacao/React Native/ConexaoVagas-App/node_modules/react-native-global-props/src/CustomFunctions/setCustomTouchable.js"],"names":["setCustomTouchableNativeFeedback","customProps","TouchableNativeFeedbackRender","TouchableNativeFeedback","render","initialDefaultProps","defaultProps","props","oldProps","style","apply","arguments","setCustomTouchableWithoutFeedback","TouchableWithoutFeedbackRender","TouchableWithoutFeedback","setCustomTouchableOpacity","TouchableOpacityRender","TouchableOpacity","setCustomTouchableHighlight","TouchableHighlightRender","TouchableHighlight"],"mappings":"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","sourcesContent":["import {\r\n  TouchableHighlight,\r\n  TouchableNativeFeedback,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity\r\n} from 'react-native';\r\n\r\nexport const setCustomTouchableNativeFeedback = customProps => {\r\n  const TouchableNativeFeedbackRender = TouchableNativeFeedback.render\r\n  const initialDefaultProps = TouchableNativeFeedback.defaultProps\r\n  TouchableNativeFeedback.defaultProps = {\r\n    ...initialDefaultProps,\r\n    ...customProps\r\n  }\r\n  TouchableNativeFeedback.render = function render(props) {\r\n    let oldProps = props\r\n    props = { ...props, style: [customProps.style, props.style] }\r\n    try {\r\n      return TouchableNativeFeedbackRender.apply(this, arguments)\r\n    } finally {\r\n      props = oldProps\r\n    }\r\n  }\r\n}\r\nexport const setCustomTouchableWithoutFeedback = customProps => {\r\n  const TouchableWithoutFeedbackRender = TouchableWithoutFeedback.render\r\n  const initialDefaultProps = TouchableWithoutFeedback.defaultProps\r\n  TouchableWithoutFeedback.defaultProps = {\r\n    ...initialDefaultProps,\r\n    ...customProps\r\n  }\r\n  TouchableWithoutFeedback.render = function render(props) {\r\n    let oldProps = props\r\n    props = { ...props, style: [customProps.style, props.style] }\r\n    try {\r\n      return TouchableWithoutFeedbackRender.apply(this, arguments)\r\n    } finally {\r\n      props = oldProps\r\n    }\r\n  }\r\n}\r\nexport const setCustomTouchableOpacity = customProps => {\r\n  const TouchableOpacityRender = TouchableOpacity.render\r\n  const initialDefaultProps = TouchableOpacity.defaultProps\r\n  TouchableOpacity.defaultProps = {\r\n    ...initialDefaultProps,\r\n    ...customProps\r\n  }\r\n  TouchableOpacity.render = function render(props) {\r\n    let oldProps = props\r\n    props = { ...props, style: [customProps.style, props.style] }\r\n    try {\r\n      return TouchableOpacityRender.apply(this, arguments)\r\n    } finally {\r\n      props = oldProps\r\n    }\r\n  }\r\n}\r\nexport const setCustomTouchableHighlight = customProps => {\r\n  const TouchableHighlightRender = TouchableHighlight.render\r\n  const initialDefaultProps = TouchableHighlight.defaultProps\r\n  TouchableHighlight.defaultProps = {\r\n    ...initialDefaultProps,\r\n    ...customProps\r\n  }\r\n  TouchableHighlight.render = function render(props) {\r\n    let oldProps = props\r\n    props = { ...props, style: [customProps.style, props.style] }\r\n    try {\r\n      return TouchableHighlightRender.apply(this, arguments)\r\n    } finally {\r\n      props = oldProps\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}